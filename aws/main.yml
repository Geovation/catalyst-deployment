---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  CatalyST tool deployment on AWS. Includes two Lambda functions, one for NGD Wrapper and one for the ONS Geographies proxy
Parameters:
  NGDWrapperLambdaFunctionName: # Name of the NGD Wrapper Lambda function
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_-]*"
    Description: The name of the NGD Wrapper Lambda function
    Default: Lambda-NGDWrapper
  NGDWrapperLambdaRoleName: 
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the IAM role used as the NGD Wrapper execution role
    Default: Lambda-NGDWrapper-Role
  NGDWrapperLambdaPolicyName:
    Type: String
    MinLength: "1"
    MaxLength: "128"
    AllowedPattern: '[\w+=,.@-]+'
    Default: Lambda-NGDWrapper-Policy
  ONSGeographiesLambdaFunctionName:
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9_-]*"
    Description: The name of the ONS Geographies Lambda function
    Default: Lambda-ONSGeographies
  ONSGeographiesLambdaRoleName:
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: '[\w+=,.@-]+'
    Description: The name of the IAM role used as the Lambda execution role
    Default: Lambda-ONSGeographies-Role
  ONSGeographiesLambdaPolicyName:
    Type: String
    MinLength: "1"
    MaxLength: "128"
    AllowedPattern: '[\w+=,.@-]+'
    Default: Lambda-ONSGeographies-Policy

Resources:

  NGDWrapperLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref NGDWrapperLambdaRoleName
      Description: An execution role for the NGD Wrapper Lambda function
      ManagedPolicyArns:
        - !Ref NGDWrapperLambdaPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  NGDWrapperLambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: NGDWrapperLambdaFunction
    Properties:
      ManagedPolicyName: !Ref NGDWrapperLambdaPolicyName
      Description: Managed policy for a Lambda function launched by CloudFormation
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
            Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*"

  NGDWrapperLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref NGDWrapperLambdaFunction]]
      RetentionInDays: 30

  NGDWrapperLambdaUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt "NGDWrapperLambdaFunction.Arn"
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
        AllowOrigins:
          - "*"
  
  NGDWrapperLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Provides a wrapper for the NGD API
      FunctionName: !Ref NGDWrapperLambdaFunctionName
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Runtime: python3.13
      Role: !GetAtt "NGDWrapperLambdaRole.Arn"
      Timeout: 240
      #Environment:
        #Variables:
      Code:
        ZipFile: "https://raw.githubusercontent.com/geovation/catalyst-deployment/refs/heads/main/aws/sample.zip"

  NGDWrapperLambdaUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref NGDWrapperLambdaFunction
      Principal: "*"
      FunctionUrlAuthType: NONE

  ONSGeographiesLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ONSGeographiesLambdaRoleName
      Description: An execution role for the ONS Geographies Proxy
      ManagedPolicyArns:
        - !Ref ONSGeographiesLambdaPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  ONSGeographiesLambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: ONSGeographiesLambdaFunction
    Properties:
      ManagedPolicyName: !Ref ONSGeographiesLambdaPolicyName
      Description: Managed policy for a Lambda function
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
            Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*"

  ONSGeographiesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref ONSGeographiesLambdaFunction]]
      RetentionInDays: 30

  ONSGeographiesLambdaUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt "ONSGeographiesLambdaFunction.Arn"
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
        AllowOrigins:
          - "*"

  ONSGeographiesLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Proxy for the ONS Geographies Proxy
      FunctionName: !Ref ONSGeographiesLambdaFunctionName
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Runtime: python3.13
      Role: !GetAtt "ONSGeographiesLambdaRole.Arn"
      Timeout: 240
      #Environment:
        #Variables:
      Code:
        ZipFile: "https://raw.githubusercontent.com/geovation/catalyst-deployment/refs/heads/main/aws/sample.zip"

  ONSGeographiesLambdaUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref ONSGeographiesLambdaFunction
      Principal: "*"
      FunctionUrlAuthType: NONE
